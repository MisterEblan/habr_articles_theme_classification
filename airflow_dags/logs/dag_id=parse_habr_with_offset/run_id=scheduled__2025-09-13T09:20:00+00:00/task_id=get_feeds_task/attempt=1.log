{"timestamp":"2025-09-13T09:30:00.686366","level":"info","event":"DAG bundles loaded: dags-folder","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-09-13T09:30:00.686789","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/parse_habr_dag.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-09-13T09:30:00.982938","level":"warning","event":"/home/airflow/.local/lib/python3.12/site-packages/airflow/models/variable.py:147: DeprecationWarning: Using Variable.get from `airflow.models` is deprecated.Please use `get` on Variable from sdk(`airflow.sdk.Variable`) instead\n  warnings.warn(\n","logger":"py.warnings"}
{"timestamp":"2025-09-13T09:30:00.990787","level":"warning","event":"Skipping masking for a secret as it's too short (<5 chars)","logger":"airflow.sdk.execution_time.secrets_masker"}
{"timestamp":"2025-09-13T09:30:00.990867","level":"info","event":"Парсим 5 со смещением 6","logger":"pipeline_tools.parsers"}
{"timestamp":"2025-09-13T09:30:00.990899","level":"info","event":"Получено 0 фидов","logger":"pipeline_tools.parsers"}
{"timestamp":"2025-09-13T09:30:00.990969","level":"warning","event":"/home/airflow/.local/lib/python3.12/site-packages/airflow/models/variable.py:204: DeprecationWarning: Using Variable.set from `airflow.models` is deprecated.Please use `set` on Variable from sdk(`airflow.sdk.Variable`) instead\n  warnings.warn(\n","logger":"py.warnings"}
{"timestamp":"2025-09-13T09:30:00.995878","level":"info","event":"Done. Returned value was: []","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-09-13T09:30:00.996026","level":"info","event":"Pushing xcom","ti":"RuntimeTaskInstance(id=UUID('01994268-fb94-767a-9b9a-57a477533b3b'), task_id='get_feeds_task', dag_id='parse_habr_with_offset', run_id='scheduled__2025-09-13T09:20:00+00:00', try_number=1, map_index=-1, hostname='4d3a2c9a7c1c', context_carrier={}, task=<Task(PythonOperator): get_feeds_task>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=0, start_date=datetime.datetime(2025, 9, 13, 9, 30, 0, 563193, tzinfo=datetime.timezone.utc), end_date=None, state=<TaskInstanceState.RUNNING: 'running'>, is_mapped=False, rendered_map_index=None, log_url='http://localhost:8080/dags/parse_habr_with_offset/runs/scheduled__2025-09-13T09%3A20%3A00%2B00%3A00/tasks/get_feeds_task?try_number=1')","logger":"task"}
